{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\toptal-checkout-react\\\\src\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService'; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n  add\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        onClick: add,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    getProducts().then(data => {\n      const updatedData = data.map(product => {\n        return { ...product,\n          quantity: 0\n        };\n      });\n      setProducts(updatedData);\n      setLoading(false);\n    });\n  }, []);\n\n  const add = id => {\n    const updatedProduct = products.map(data => {\n      if (data.id == id) {\n        return { ...data,\n          quantity: data.quantity + 1\n        };\n      }\n\n      return data;\n    });\n    console.log(updatedProduct);\n    setProducts(updatedProduct);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [loading ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(data => {\n            return /*#__PURE__*/_jsxDEV(Product, {\n              id: data.id,\n              name: data.name,\n              availableCount: data.availableCount,\n              orderedQuantity: \"0\",\n              price: data.price,\n              total: \"0\",\n              add: () => add(data.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"ah+7MPr+EfowhQq+IfkVVkJUes8=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["C:/laragon/www/toptal-checkout-react/src/Checkout.js"],"names":["React","useState","useEffect","useMemo","styles","LoadingIcon","getProducts","Product","id","name","availableCount","price","orderedQuantity","total","add","actionButton","Checkout","loading","setLoading","products","setProducts","then","data","updatedData","map","product","quantity","updatedProduct","console","log","header","table"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useState, useEffect,useMemo} from \"react\";\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService';\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\n\n\nconst Product = ({ id, name, availableCount, price, orderedQuantity, total,add }) => {\n  return (\n    <tr key={id}>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>   \n      <td>${total}</td>\n      <td>\n        <button className={styles.actionButton} onClick={add}>+</button>\n        <button className={styles.actionButton}>-</button>\n      </td>\n    </tr>    \n  );\n}\n\n\nconst Checkout = () => {\n    const [loading,setLoading] = useState(true);\n    const [products,setProducts] = useState([]);\n\n\n    useEffect(()=>{\n        getProducts().then((data)=>{\n            const updatedData = data.map((product)=>{\n                return {...product,quantity :0}\n            });\n            setProducts(updatedData);\n            setLoading(false);\n        })\n    },[]);\n\n    const add = (id)=>{\n        const updatedProduct = products.map((data)=>{\n            if (data.id == id){\n                return {...data,quantity:data.quantity +1}\n            }\n            return data;\n        })\n        console.log(updatedProduct);\n        setProducts(updatedProduct);\n    }\n  return (\n    <div>\n      <header className={styles.header}>        \n        <h1>Electro World</h1>        \n      </header>\n      <main>\n          {loading ? <LoadingIcon /> :''}\n\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n              products.map((data)=>{\n              return (\n                  <Product id={data.id} name={data.name} availableCount={data.availableCount} orderedQuantity='0' price={data.price} total='0'\n                  add={()=>add(data.id)}/>\n              );\n          })}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        <p>Discount: $ </p>\n        <p>Total: $ </p>       \n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}